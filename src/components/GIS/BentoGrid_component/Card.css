/* The card is the main container and mask */
.card {
  position: relative;
  width: 100%;
  height: 100%;
  color: white;
  text-shadow: 0 2px 4px rgba(0,0,0,0.5);
  transition: all var(--card-transition-duration, 0.4s) var(--card-transition-timing, ease);
  /* Remove any background - let the waves show through */
}

/* This wrapper is no longer used for the canvas but kept for structure */
.card-canvas-wrapper {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  border-radius: var(--card-border-radius, 32px);
  z-index: 1; /* Base layer */
  overflow: hidden;
  pointer-events: none;
}

.canvas-wrapper canvas {
  width: 100% !important;
  height: 100% !important;
  display: block;
}

.blur-overlay, .border-effect-overlay, .text-content {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  border-radius: var(--card-border-radius, 32px);
}

.blur-overlay {
  z-index: 3; /* Above color blend, will blur the colored shader */
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(100px);
  -webkit-backdrop-filter: blur(100px);
  mask-image: var(--card-blur-overlay-gradient);
  -webkit-mask-image: var(--card-blur-overlay-gradient);
  clip-path: inset(calc(var(--card-border-size, 3px)) round calc(var(--card-border-radius, 32px) - var(--card-border-size, 3px)));
}

.border-effect-overlay {
  z-index: 4;
  background: var(--card-border-effect-gradient);
  backdrop-filter: saturate(200%) brightness(150%) blur(var(--card-border-effect-blur, 5px));
  -webkit-backdrop-filter: saturate(200%) brightness(150%) blur(var(--card-border-effect-blur, 5px));
  mask: linear-gradient(white 0 0) content-box, linear-gradient(white 0 0);
  mask-composite: exclude;
  -webkit-mask: linear-gradient(white 0 0) content-box, linear-gradient(white 0 0);
  -webkit-mask-composite: xor;
  padding: var(--card-border-size, 3px);
  box-sizing: border-box;
  pointer-events: none;
}

.text-content {
  box-sizing: border-box;
  padding: var(--card-padding, 24px);
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  z-index: 5;
  overflow: hidden;
}

.card-expanded .text-content {
  overflow-y: auto;
}

.card-expanded .card-content {
  overflow-y: auto;
  padding-right: 16px; /* Add padding for scrollbar */
}

/* Custom scrollbar for better aesthetics */
.card-expanded .card-content::-webkit-scrollbar {
  width: 6px;
}

.card-expanded .card-content::-webkit-scrollbar-track {
  background: transparent;
  margin-block: 8px;
}

.card-expanded .card-content::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.25);
  border-radius: 3px;
}

.card-expanded .card-content::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.4);
}

.color-blend-overlay {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  border-radius: var(--card-border-radius, 32px);
  z-index: 2; /* Above canvas (z-index: 1) */
  background: var(--card-background-color);
  mix-blend-mode: overlay; /* This will now correctly blend with the shader */
  opacity: 1; /* Opacity will now work as expected */
  pointer-events: none;
}

.card-header {
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 16px;
  width: 100%;
  margin-bottom: var(--card-padding, 24px);
  padding: 0;
}

.card-header-text {
  flex: 1 1 auto;
  min-width: 0; /* Allows the container to shrink below its content's intrinsic width */
  overflow: hidden;
}

.card-header-text h1 {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: rgb(248, 248, 248);
  margin: 0;
  opacity: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Scrolling text on hover */
.card-header-text h1.overflowing {
  position: relative;
}

.card-header-text:hover h1.overflowing {
  overflow: visible;
  text-overflow: clip;
}

.card-header-text:hover h1.overflowing > span {
  display: inline-block;
  animation: scroll-text var(--scroll-duration, 10s) linear infinite;
}

.card-header-text h1.overflowing > span::after {
  content: attr(data-text);
  position: absolute;
  left: 100%;
  top: 0;
  white-space: nowrap;
  padding-left: 32px;
}

@keyframes scroll-text {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(-100% - 32px));
  }
}

.card-header-icons {
  flex-shrink: 0; /* Prevents the icon container from shrinking */
  display: flex;
  align-items: center;
  gap: 8px;
}

.card-pin-btn, .card-info-btn, .card-expand-btn {
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  width: 24px;
  height: 24px;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease, transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  flex-shrink: 0;
  position: relative;
}

.card-pin-btn svg, .card-info-btn svg, .card-expand-btn svg {
  transition: all 0.2s ease;
}

.card-pin-btn:hover, .card-info-btn:hover, .card-expand-btn:hover {
  background: rgba(255, 255, 255, 0.3);
  border-color: rgba(255, 255, 255, 0.5);
  transform: scale(1.1);
}

.card-pin-btn.pinned {
  transform: scale(1.1);
}

.card-pin-btn.pinned svg {
  opacity: 1;
}

.card-expand-btn:active {
  transform: scale(0.95);
}

.card-expand-btn:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  transform: scale(1);
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.2);
}

.card-expand-btn:disabled:hover {
  transform: none;
  cursor: not-allowed;
}

.card-content {
  flex-grow: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: var(--children-gap, 16px);
}

.card-content > * {
  /* Default styling for direct children */
  background: transparent;
  border: 1px solid transparent;
  border-radius: var(--child-border-radius, calc(32px - 24px - 3px));
  padding: 16px;
  transition: background 0.3s ease, border-color 0.3s ease;
}

.card.card-expanded .card-content > * {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.1);
}

.card-content > *:first-child {
  margin-top: 0;
}

.card-content > *:last-child {
  margin-bottom: 0;
}

.card-content h3 {
  margin: 0;
  font-size: 0.9rem;
  font-weight: 600;
  opacity: 0.8;
}

.card-content p {
  margin: 0;
  font-size: 0.8rem;
  line-height: 1.5;
  opacity: 0.7;
}

.card-content ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.card-content .text-sm {
  font-size: 0.75rem;
  opacity: 0.6;
}

/* Fades out the last item to indicate more content */
.card:not(.card-expanded) .card-content > *:last-child {
  position: relative;
  /* Add some margin to not cut off the fade */
}

.card-more-indicator {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 60%;
  background: linear-gradient(to top, rgba(0, 0, 0, 1), transparent);
  pointer-events: none;
  border-radius: var(--child-border-radius);
  margin: -16px; /* Counteract padding on parent */
}